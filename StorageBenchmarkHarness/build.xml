<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="StorageBenchmarkHarness">
    <property environment="env"/>
    <property name="StorageBenchmarkHarness.location" value="../StorageBenchmarkHarness"/>
    <property name="ECLIPSE_HOME" value="../../"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="StorageBenchmarkHarnessModel.location" value="../StorageBenchmarkHarnessModel"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <import file="build-user.xml"/>
    <path id="StorageBenchmarkHarnessModel.classpath">
        <pathelement location="${StorageBenchmarkHarnessModel.location}/bin"/>
        <pathelement location="${StorageBenchmarkHarness.location}/libs/eclipse-emf/org.eclipse.emf.common_2.8.0.v20130125-0546.jar"/>
        <pathelement location="${StorageBenchmarkHarness.location}/libs/eclipse-emf/org.eclipse.emf.ecore_2.8.3.v20130125-0546.jar"/>
    </path>
    <path id="StorageBenchmarkHarness.classpath">
        <pathelement location="bin"/>
        <pathelement location="libs/guava-11.0.1/guava-11.0.1.jar"/>
        <pathelement location="libs/sqlite4java-213/sqlite4java.jar"/>
        <pathelement location="libs/logback-0.9.21/logback-classic-0.9.21.jar"/>
        <pathelement location="libs/logback-0.9.21/logback-core-0.9.21.jar"/>
        <pathelement location="libs/slf4j-1.6.0/slf4j-api-1.6.0.jar"/>
        <pathelement location="libs/jsch-0.1.45/dist/lib/jsch-20120123.jar"/>
        <pathelement location="libs/eclipse-ocl/org.eclipse.ocl.ecore_3.2.0.v20120126-0656.jar"/>
        <pathelement location="libs/eclipse-ocl/org.eclipse.ocl_3.2.0.v20120130-1105.jar"/>
        <pathelement location="libs/eclipse-ocl/lpg.runtime.java_2.0.17.v201004271640.jar"/>
        <pathelement location="libs/junit-4.10/junit-4.10.jar"/>
        <pathelement location="libs/JCommander/JCommander.20120328.jar"/>
        <path refid="StorageBenchmarkHarnessModel.classpath"/>
        <pathelement location="libs/eclipse-emf/org.eclipse.emf.common_2.8.0.v20130125-0546.jar"/>
        <pathelement location="libs/eclipse-emf/org.eclipse.emf.ecore_2.8.3.v20130125-0546.jar"/>
        <pathelement location="libs/eclipse-emf/org.eclipse.emf.ecore.xmi_2.8.1.v20130125-0546.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="tests">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="build.xml" dir="${StorageBenchmarkHarnessModel.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="build.xml" dir="${StorageBenchmarkHarnessModel.location}" inheritAll="false" target="build-project">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="StorageBenchmarkHarness.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="tests"/>
            <classpath refid="StorageBenchmarkHarness.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="CartesianTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.kit.sdq.storagebenchmarkharness.CartesianTest" todir="${junit.output.dir}"/>
            <classpath refid="StorageBenchmarkHarness.classpath"/>
        </junit>
    </target>
    <target name="FilebenchBenchmarkDriverTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.kit.sdq.storagebenchmarkharness.benchmarks.filebench.FilebenchBenchmarkDriverTest" todir="${junit.output.dir}"/>
            <classpath refid="StorageBenchmarkHarness.classpath"/>
        </junit>
    </target>
    <target name="MonitoringTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.kit.sdq.storagebenchmarkharness.monitors.MonitoringTest" todir="${junit.output.dir}"/>
            <classpath refid="StorageBenchmarkHarness.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>

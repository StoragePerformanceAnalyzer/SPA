{"name":"Storage Performance Analyzer","tagline":"","body":"## Description \r\nThe Storage Performance Analyzer (SPA) is a software package containing the functionality for the systematic measurement, analysis and regression modeling specifically tailored for storage systems. SPA consists of a benchmark harness that coordinates and controls the execution of the included I/O benchmarks (FFSB and Filebench) and a tailored analysis library used to process and evaluate the collected measurements.\r\n\r\nThe benchmark harness supports the execution of benchmarks. Using a specification of the benchmark parameter space, which should be run on the remote machine, the software ensures that each of these configurations is executed automatically in a deterministic order. Furthermore, the benchmark harness supports synchronous measurements on co-located virtual machines in virtualized environments. The software ensures that the benchmark results are stored persistently in an SQLite database to provide easy access for further analysis.\r\n\r\nThe analysis library provides the functionality for the analysis of the measurement results obtained with the benchmark harness. By providing a drop-in solution for the widely accepted statistical framework R, the power of R is combined with the specialized functionality of SPA. The analysis functions help with the derivation and analysis of regression models from the benchmark results. It also contains functionality to optimize many regression techniques to maximize the modeling power in different scenarios. The R environment can be exploited to further analyze the measurements and to generate illustrations of the analysis results. \r\n\r\n## Information \r\n###  Lead <br> Qais Noorshams <br> Samuel Kounev \r\n\r\n### Contributors\r\n    Dominik Bruhn\r\n    Axel Busch\r\n    Samuel Kounev\r\n    Qais Noorshams\r\n    Ralf Reussner \r\n<!--\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n-->","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}